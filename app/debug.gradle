def ADB_PATH = "${android.getSdkDirectory()}/platform-tools/adb"
def appInfo = [
    Alipay: "com.eg.android.AlipayGphone",
    Taobao: "com.taobao.taobao",
    WeChat: "com.tencent.mm",
]
appInfo.each {entry ->
    def name = entry.key
    def packageName = entry.value
    def stopTask = tasks.create(name: "stop$name", type: Exec) {
        doFirst { println "Stop $name..." }
        executable = ADB_PATH
        args = ['shell', "am force-stop $packageName"]
    }
    def startTask = tasks.create(name: "start$name", type: Exec) {
        doFirst { println "Start $name..." }
        executable = ADB_PATH
        args = ['shell', "monkey -p ${packageName} -c android.intent.category.LAUNCHER 1"]
    }
    def debugXposedTask = tasks.create(name: "debug${name}Xposed", dependsOn: ["installDebug", stopTask], type: Exec) {
        executable = ADB_PATH
        args = ['shell', "package=${android.defaultConfig.applicationId}&& cp -f \$(pm path \$package| cut -d: -f2) /data/local/tmp/\$package.apk && chmod 777 /data/local/tmp/\$package.apk"]
    }
    debugXposedTask.finalizedBy(startTask)
    def debugMagiskTask = tasks.create(name: "debug${name}Magisk", dependsOn: ["mergeDexDebug", stopTask], type: Exec) {
        def classDexPath = new File(project.buildDir, "intermediates/dex/debug/out/classes.dex").absolutePath
        executable = ADB_PATH
        args = ['push', classDexPath, "/data/local/tmp/libriru-module-xfingerprint-pay-${name.toLowerCase()}.dex"]
    }
    debugMagiskTask.finalizedBy(startTask)
}

android.applicationVariants.all { variant ->
    variant.getCompileConfiguration().resolutionStrategy {
        if (variant.install != null) {
            variant.install.doLast {
                println "Running app..."
                exec {
                    executable = ADB_PATH
                    args = ['shell', "monkey -p ${variant.applicationId} -c android.intent.category.LAUNCHER 1"]
                }
            }
        }
        variant.outputs.each { output ->
            def apkName = "app-${variant.buildType.name}.apk"
            output.outputFileName = apkName
        }
    }
}